.xe-dialog-preview {
  min-height: 120px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.xe-dialog-preview:empty {
  position: relative;
}
.xe-dialog-preview:empty::after {
  content: '预览区域';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);
  font-size: 20px;
  color: rgba(0, 0, 0, 0.25);
}
.xe-underwavy {
  -webkit-text-decoration: underline wavy 1px;
          text-decoration: underline wavy 1px;
}
.xe-underline {
  -webkit-text-decoration: underline 1px;
          text-decoration: underline 1px;
}
.xe-underdoubleline {
  -webkit-text-decoration: underline double 1px;
          text-decoration: underline double 1px;
}
.xe-underpoint {
  text-emphasis-style: dot;
  text-emphasis-position: under left;
}
.xe-pinyin {
  text-align: center !important;
}
.xe-pinyin-group {
  display: inline-flex;
  flex-wrap: wrap;
  gap: 4px 0;
}
.xe-pinyin-group > .xe-tianzige:not(:last-child),
.xe-pinyin-group > .xe-pinyin:not(:last-child) {
  margin-right: -1px;
}
.xe-tianzige {
  width: 3em !important;
  height: 3em !important;
  position: relative !important;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: currentColor solid 1px !important;
  vertical-align: text-bottom;
}
.xe-tianzige::before,
.xe-tianzige::after {
  content: '';
  position: absolute;
  display: block;
  width: 100%;
  border-top: currentColor dashed 1px;
  transform: scale3d(1, 0.75, 1);
  left: 0;
  opacity: 0.65;
}
.xe-tianzige::after {
  width: 0;
  height: 100%;
  border-top: 0;
  border-left: currentColor dashed 1px;
  transform: scale3d(0.75, 1, 1);
  top: 0;
  left: auto;
}
.xe-tianzige__text {
  font-size: 1em;
}
.xe-formula {
  display: inline-block;
}
.xe-blank,
.xe-blanknumber {
  border-bottom: currentColor solid 1px;
}
.xe-blanknumber {
  width: 4em;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin: 0 2px;
}
mjx-container[jax='SVG'][display='true'] {
  margin: 0 !important;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Lmxlc3MiLCIuLi8uLi88aW5wdXQgY3NzIDE+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksa0JBQUE7RUFDQSxjQUFBO0VBQ0Esb0JBQUE7RUFDQSx3QkFBQTtDQ0RQO0FER087RUFDSSxtQkFBQTtDQ0RYO0FER1c7RUFDSSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7RUFDQSxzQ0FBQTtFQUNBLGdCQUFBO0VBQ0EsMkJBQUE7Q0NEZjtBRE9HO0VBQ0ksNENBQUE7VUFBQSxvQ0FBQTtDQ0xQO0FEU0c7RUFDSSx1Q0FBQTtVQUFBLCtCQUFBO0NDUFA7QURXRztFQUNJLDhDQUFBO1VBQUEsc0NBQUE7Q0NUUDtBRGFHO0VBQ0kseUJBQUE7RUFDQSxtQ0FBQTtDQ1hQO0FEY0c7RUFDSSw4QkFBQTtDQ1pQO0FEY087RUFDSSxxQkFBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtDQ1pYO0FEZ0JlOztFQUNJLG1CQUFBO0NDYm5CO0FEb0JHO0VBQ0ksc0JBQUE7RUFDQSx1QkFBQTtFQUNBLDhCQUFBO0VBQ0EscUJBQUE7RUFDQSxvQkFBQTtFQUNBLHdCQUFBO0VBQ0EsMENBQUE7RUFDQSw0QkFBQTtDQ2xCUDtBRG9CTzs7RUFFSSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLG9DQUFBO0VBQ0EsK0JBQUE7RUFDQSxRQUFBO0VBQ0EsY0FBQTtDQ2xCWDtBRHFCTztFQUNJLFNBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtFQUNBLHFDQUFBO0VBQ0EsK0JBQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtDQ25CWDtBRHNCTztFQUNJLGVBQUE7Q0NwQlg7QUR5Qkc7RUFDSSxzQkFBQTtDQ3ZCUDtBRDJCRzs7RUFFSSxzQ0FBQTtDQ3pCUDtBRDZCRztFQUNJLFdBQUE7RUFDQSxxQkFBQTtFQUNBLG9CQUFBO0VBQ0Esd0JBQUE7RUFDQSxjQUFBO0NDM0JQO0FEZ0NEO0VBQ0kscUJBQUE7Q0M5QkgiLCJmaWxlIjoiaW5kZXguY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnhlIHtcbiAgICAvLyDlvLnnqpfkuK3nmoTpooTop4jljLrln59cbiAgICAmLWRpYWxvZy1wcmV2aWV3IHtcbiAgICAgICAgbWluLWhlaWdodDogMTIwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgICAgICY6ZW1wdHkge1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgY29udGVudDogJ+mihOiniOWMuuWfnyc7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIOazoua1que6v1xuICAgICYtdW5kZXJ3YXZ5IHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgd2F2eSAxcHg7XG4gICAgfVxuXG4gICAgLy8g5LiL5YiS57q/XG4gICAgJi11bmRlcmxpbmUge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSAxcHg7XG4gICAgfVxuXG4gICAgLy8g5Y+M5LiL5YiS57q/XG4gICAgJi11bmRlcmRvdWJsZWxpbmUge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3VibGUgMXB4O1xuICAgIH1cblxuICAgIC8vIOWKoOeCueWtl1xuICAgICYtdW5kZXJwb2ludCB7XG4gICAgICAgIHRleHQtZW1waGFzaXMtc3R5bGU6IGRvdDtcbiAgICAgICAgdGV4dC1lbXBoYXNpcy1wb3NpdGlvbjogdW5kZXIgbGVmdDtcbiAgICB9XG5cbiAgICAmLXBpbnlpbiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuXG4gICAgICAgICYtZ3JvdXAge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICBnYXA6IDRweCAwO1xuXG4gICAgICAgICAgICA+IC54ZS10aWFuemlnZSxcbiAgICAgICAgICAgID4gLnhlLXBpbnlpbiB7XG4gICAgICAgICAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIOeUsOWtl+agvFxuICAgICYtdGlhbnppZ2Uge1xuICAgICAgICB3aWR0aDogM2VtICFpbXBvcnRhbnQ7XG4gICAgICAgIGhlaWdodDogM2VtICFpbXBvcnRhbnQ7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50O1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGJvcmRlcjogY3VycmVudENvbG9yIHNvbGlkIDFweCAhaW1wb3J0YW50O1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG5cbiAgICAgICAgJjo6YmVmb3JlLFxuICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBib3JkZXItdG9wOiBjdXJyZW50Q29sb3IgZGFzaGVkIDFweDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLCAwLjc1LCAxKTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjY1O1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IGN1cnJlbnRDb2xvciBkYXNoZWQgMXB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuNzUsIDEsIDEpO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogYXV0bztcbiAgICAgICAgfVxuXG4gICAgICAgICZfX3RleHQge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyDlhazlvI9cbiAgICAmLWZvcm11bGEge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuXG4gICAgLy8g5aGr56m6XG4gICAgJi1ibGFuayxcbiAgICAmLWJsYW5rbnVtYmVyIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogY3VycmVudENvbG9yIHNvbGlkIDFweDtcbiAgICB9XG5cbiAgICAvLyDluo/lj7floavnqbpcbiAgICAmLWJsYW5rbnVtYmVyIHtcbiAgICAgICAgd2lkdGg6IDRlbTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDAgMnB4O1xuICAgIH1cbn1cblxuLy8g5YWs5byPXG5tangtY29udGFpbmVyW2pheD0nU1ZHJ11bZGlzcGxheT0ndHJ1ZSddIHtcbiAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcbn1cbiIsIi54ZS1kaWFsb2ctcHJldmlldyB7XG4gIG1pbi1oZWlnaHQ6IDEyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi54ZS1kaWFsb2ctcHJldmlldzplbXB0eSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi54ZS1kaWFsb2ctcHJldmlldzplbXB0eTo6YWZ0ZXIge1xuICBjb250ZW50OiAn6aKE6KeI5Yy65Z+fJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjUpO1xufVxuLnhlLXVuZGVyd2F2eSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIHdhdnkgMXB4O1xufVxuLnhlLXVuZGVybGluZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIDFweDtcbn1cbi54ZS11bmRlcmRvdWJsZWxpbmUge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3VibGUgMXB4O1xufVxuLnhlLXVuZGVycG9pbnQge1xuICB0ZXh0LWVtcGhhc2lzLXN0eWxlOiBkb3Q7XG4gIHRleHQtZW1waGFzaXMtcG9zaXRpb246IHVuZGVyIGxlZnQ7XG59XG4ueGUtcGlueWluIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4ueGUtcGlueWluLWdyb3VwIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZ2FwOiA0cHggMDtcbn1cbi54ZS1waW55aW4tZ3JvdXAgPiAueGUtdGlhbnppZ2U6bm90KDpsYXN0LWNoaWxkKSxcbi54ZS1waW55aW4tZ3JvdXAgPiAueGUtcGlueWluOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4tcmlnaHQ6IC0xcHg7XG59XG4ueGUtdGlhbnppZ2Uge1xuICB3aWR0aDogM2VtICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogM2VtICFpbXBvcnRhbnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlcjogY3VycmVudENvbG9yIHNvbGlkIDFweCAhaW1wb3J0YW50O1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG4ueGUtdGlhbnppZ2U6OmJlZm9yZSxcbi54ZS10aWFuemlnZTo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci10b3A6IGN1cnJlbnRDb2xvciBkYXNoZWQgMXB4O1xuICB0cmFuc2Zvcm06IHNjYWxlM2QoMSwgMC43NSwgMSk7XG4gIGxlZnQ6IDA7XG4gIG9wYWNpdHk6IDAuNjU7XG59XG4ueGUtdGlhbnppZ2U6OmFmdGVyIHtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyLXRvcDogMDtcbiAgYm9yZGVyLWxlZnQ6IGN1cnJlbnRDb2xvciBkYXNoZWQgMXB4O1xuICB0cmFuc2Zvcm06IHNjYWxlM2QoMC43NSwgMSwgMSk7XG4gIHRvcDogMDtcbiAgbGVmdDogYXV0bztcbn1cbi54ZS10aWFuemlnZV9fdGV4dCB7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuLnhlLWZvcm11bGEge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4ueGUtYmxhbmssXG4ueGUtYmxhbmtudW1iZXIge1xuICBib3JkZXItYm90dG9tOiBjdXJyZW50Q29sb3Igc29saWQgMXB4O1xufVxuLnhlLWJsYW5rbnVtYmVyIHtcbiAgd2lkdGg6IDRlbTtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW46IDAgMnB4O1xufVxubWp4LWNvbnRhaW5lcltqYXg9J1NWRyddW2Rpc3BsYXk9J3RydWUnXSB7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xufVxuIl19 */
